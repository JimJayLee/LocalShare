name: Build Electron App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '20'
  PACKAGE_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || '1.0.7' }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          # 只使用最新的 Node.js 版本以减少构建时间
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Update package version
      run: |
        if [ "${{ github.ref_type }}" == "tag" ]; then
          VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          npm version $VERSION --no-git-tag-version
        fi
      shell: bash

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Build Electron app
      run: npm run electron:build
      env:
        # 设置环境变量以优化构建
        NODE_ENV: production
        ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
        ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: localshare-${{ matrix.platform }}
        path: |
          release/
          !release/*.blockmap
          !release/*.yml
        retention-days: 30

  # 专门用于发布的工作流
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.dmg
          artifacts/**/*.exe
          artifacts/**/*.AppImage
          artifacts/**/*.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 