name: GitHub CLI Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "LocalShare ${{ github.ref_name }}" \
          --notes "## ðŸš€ LocalShare Release ${{ github.ref_name }}
          
          ### ðŸ“¦ Downloads
          - **Windows**: \`.exe\` installer
          - **macOS**: \`.dmg\` disk image
          - **Linux**: \`.AppImage\` portable app, \`.deb\` package
          
          ### ðŸ”§ Installation
          **Windows**: Run the \`.exe\` installer
          
          **macOS**: Mount the \`.dmg\` file and drag to Applications
          
          **Linux**:
          - **AppImage**: Make executable and run: \`chmod +x LocalShare-*.AppImage && ./LocalShare-*.AppImage\`
          - **DEB**: \`sudo dpkg -i LocalShare-*.deb\`
          
          ### ðŸ“‹ Changes
          See the commit history for detailed changes." \
          --draft=false \
          --prerelease=false

    - name: Upload Assets
      run: |
        # ä¸Šä¼  macOS æ–‡ä»¶
        for file in artifacts/**/*.dmg; do
          if [ -f "$file" ]; then
            gh release upload ${{ github.ref_name }} "$file"
          fi
        done
        
        # ä¸Šä¼  Windows æ–‡ä»¶
        for file in artifacts/**/*.exe; do
          if [ -f "$file" ]; then
            gh release upload ${{ github.ref_name }} "$file"
          fi
        done
        
        # ä¸Šä¼  Linux AppImage æ–‡ä»¶
        for file in artifacts/**/*.AppImage; do
          if [ -f "$file" ]; then
            gh release upload ${{ github.ref_name }} "$file"
          fi
        done
        
        # ä¸Šä¼  Linux DEB åŒ…æ–‡ä»¶
        for file in artifacts/**/*.deb; do
          if [ -f "$file" ]; then
            gh release upload ${{ github.ref_name }} "$file"
          fi
        done
        

        
        # ä¸Šä¼  ZIP æ–‡ä»¶
        for file in artifacts/**/*.zip; do
          if [ -f "$file" ]; then
            gh release upload ${{ github.ref_name }} "$file"
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 